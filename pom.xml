<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.example.customer</groupId>
	<artifactId>customer-with-addresses</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Customer with Addresses</name>
	<description>Customer with Addresses (Interview Challenge)</description>


	<properties>
		<java.version>17</java.version>

		<basePackage>com.example.customer</basePackage>
		<openApiApiPackage>${basePackage}.adapters.web</openApiApiPackage>
		<openApiModelPackage>${basePackage}.adapters.web.model</openApiModelPackage>
		<asyncApiModelPackage>${basePackage}.core.outbound.events.dtos</asyncApiModelPackage>
		<asyncApiProducerApiPackage>${basePackage}.core.outbound.events</asyncApiProducerApiPackage>
		<asyncApiConsumerApiPackage>${basePackage}.adapters.commands</asyncApiConsumerApiPackage>

		<spring-boot.version>${project.parent.version}</spring-boot.version>
		<spring-cloud.version>2022.0.4</spring-cloud.version>
		<spring-cloud-stream-schema.version>2.2.1.RELEASE</spring-cloud-stream-schema.version>

		<zenwave.version>1.6.0</zenwave.version>

		<jakarta.validation-api.version>3.1.0</jakarta.validation-api.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<karate.version>1.4.1</karate.version>
		<archunit-junit5.version>1.3.0</archunit-junit5.version>
		<springdoc-openapi-starter-webmvc-ui.version>2.5.0</springdoc-openapi-starter-webmvc-ui.version>
		<spring-javaformat-maven-plugin.version>0.0.42</spring-javaformat-maven-plugin.version>
		<infinispan-spring-boot-starter-embedded.version>14.0.29.Final</infinispan-spring-boot-starter-embedded.version>
		<redisson.version>3.32.0</redisson.version>
		<izertis-usermanagement-starter.version>0.0.1-SNAPSHOT</izertis-usermanagement-starter.version>
		<izertis-authserver-starter.version>0.0.1-SNAPSHOT</izertis-authserver-starter.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- jpa -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-ant</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- utils -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta.validation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi-starter-webmvc-ui.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.intuit.karate</groupId>
			<artifactId>karate-core</artifactId>
			<version>${karate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-api</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Adding the engine dependency to the surefire-plugin unfortunately does not work in the current version. -->
		<!-- https://www.archunit.org/userguide/html/000_Index.html#_junit_5 -->
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-engine</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<version>${spring-javaformat-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<configuration>
					<excludes>
						<exclude>**/config/**</exclude>
						<exclude>**/*DTO.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>7.8.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/public/apis/openapi.yml</inputSpec>
							<skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
							<generatorName>spring</generatorName>
							<apiPackage>${openApiApiPackage}</apiPackage>
							<modelPackage>${openApiModelPackage}</modelPackage>
							<modelNameSuffix>DTO</modelNameSuffix>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<generateSupportingFiles>false</generateSupportingFiles>
							<typeMappings>
								<typeMapping>Double=java.math.BigDecimal</typeMapping>
							</typeMappings>
							<configOptions>
								<useSpringBoot3>true</useSpringBoot3>
								<documentationProvider>none</documentationProvider>
								<openApiNullable>false</openApiNullable>
								<useOptional>true</useOptional>
								<useTags>true</useTags>
								<interfaceOnly>true</interfaceOnly>
								<skipDefaultInterface>true</skipDefaultInterface>
								<delegatePattern>false</delegatePattern>
								<sortParamsByRequiredFlag>false</sortParamsByRequiredFlag>
							</configOptions>
						</configuration>
					</execution>
					<!-- Ejemplo de como generar un cliente OpenAPI usando spring-http-interface
						 ver tambien: HttpInterfacesWebClientConfig.java
					<execution>
						<id>openapi-generator-client-customers</id>
						<goals><goal>generate</goal></goals>
						<phase>generate-sources</phase>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/public/apis/clients/customer-openapi.yml</inputSpec>
							<generatorName>spring</generatorName>
							<library>spring-http-interface</library>
							<apiPackage>${basePackage}.customers.client</apiPackage>
							<modelPackage>${basePackage}.customers.client.model</modelPackage>
							<modelNameSuffix>DTO</modelNameSuffix>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<typeMappings>
								<typeMapping>Double=java.math.BigDecimal</typeMapping>
							</typeMappings>
							<configOptions>
								<useJakartaEe>true</useJakartaEe>
								<documentationProvider>none</documentationProvider>
								<openApiNullable>false</openApiNullable>
								<useOptional>true</useOptional>
								<useTags>true</useTags>
							</configOptions>
						</configuration>
					</execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
	</build>

	<profiles>
		<profile>
			<id>asyncapi-code-generation</id>
			<activation>
				<file>
					<exists>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.github.zenwave360.zenwave-sdk</groupId>
						<artifactId>zenwave-sdk-maven-plugin</artifactId>
						<version>${zenwave.version}</version>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/public/apis/asyncapi.yml</inputSpec>
							<skip>false</skip>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<addTestCompileSourceRoot>true</addTestCompileSourceRoot>
						</configuration>
						<executions>
							<!-- DTOs -->
							<execution>
								<id>generate-asyncapi-dtos</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<generatorName>jsonschema2pojo</generatorName>
									<configOptions>
										<modelPackage>${asyncApiModelPackage}</modelPackage>
										<jsonschema2pojo.isUseJakartaValidation>true</jsonschema2pojo.isUseJakartaValidation>
										<jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>
										<jsonschema2pojo.includeAdditionalProperties>true</jsonschema2pojo.includeAdditionalProperties>
									</configOptions>
								</configuration>
							</execution>
							<!-- Generate PROVIDER -->
							<execution>
								<id>generate-asyncapi</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<generatorName>spring-cloud-streams3</generatorName>
									<configOptions>
										<role>provider</role>
										<style>imperative</style>
										<modelPackage>${asyncApiModelPackage}</modelPackage>
										<producerApiPackage>${asyncApiProducerApiPackage}</producerApiPackage>
										<consumerApiPackage>${asyncApiConsumerApiPackage}</consumerApiPackage>
									</configOptions>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
								<artifactId>asyncapi-spring-cloud-streams3</artifactId>
								<version>${zenwave.version}</version>
							</dependency>
							<dependency>
								<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
								<artifactId>asyncapi-jsonschema2pojo</artifactId>
								<version>${zenwave.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
